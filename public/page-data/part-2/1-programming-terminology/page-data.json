{
    "componentChunkName": "component---src-templates-course-content-template-js",
    "path": "/part-2/1-programming-terminology",
    "result": {"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will be familiar with some essential terminology in programming"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will know the difference between a statement and an expression"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will be able to find out the data type of an evaluated expression"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will have learnt to use debugging methods to find mistakes in your code"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the first part of this course we didn't pay much attention to terminology, so let's have a look at some central concepts in programming."}]},{"type":"element","tagName":"h2","properties":{"id":"statement","style":"position:relative;"},"children":[{"type":"text","value":"Statement"},{"type":"element","tagName":"a","properties":{"href":"#statement","ariaLabel":"statement permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"statement"}]},{"type":"text","value":" is a part of the program which executes something. It often, but not always, refers to a single command."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(\"Hi!\")"}]},{"type":"text","value":" is a statement which prints out a line of text. Likewise, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"number = 2"}]},{"type":"text","value":" is a statement which assigns a value to a variable."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A statement can also be more complicated. It can, for instance, contain other statements. The following statement spans three lines:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Anna\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the above case there are two statements (a print statement and an assignment statement) within a conditional statement."}]},{"type":"element","tagName":"h2","properties":{"id":"block","style":"position:relative;"},"children":[{"type":"text","value":"Block"},{"type":"element","tagName":"a","properties":{"href":"#block","ariaLabel":"block permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"block"}]},{"type":"text","value":" is a group of consecutive statements that are at the same level in the structure of the program. For example, the block of a conditional statement contains those statements which are executed only if the condition is true."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" age "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"17"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# beginning of the conditional block"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"You are of age!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    age "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" age "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"You are now one year older...\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# end of the conditional block"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"This here belongs to another block\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python blocks are expressed by indenting all code in the block by the same amount of whitespace."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NB: the main block of a Python program must always be at the leftmost edge of the file, without indentation:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# this program will not work because it is not written at the leftmost egde of the file"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"hello world\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"this program is not very good...\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"expression","style":"position:relative;"},"children":[{"type":"text","value":"Expression"},{"type":"element","tagName":"a","properties":{"href":"#expression","ariaLabel":"expression permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"expression"}]},{"type":"text","value":" is a bit of code that results in a determined data type. When the program is executed, the expression is evaluated so that it has a value that can then be used in the program."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are a few examples of expressions:"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Expression"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Value"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Type"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Python data type"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"2 + 4 + 3"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"9"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"integer"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"int"}]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"abc\" + \"de\""}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"abcde\""}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"str"}]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"11 / 2"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"5.5"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"floating point number"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"float"}]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"2 * 5 > 9"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"True"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Boolean value"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"bool"}]}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because all expressions have a type, they can be assigned to variables:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# the variable x is assigned the value of the expression 1 + 2"}]},{"type":"text","value":"\nx "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Simple expressions can be assembled together to form more complicated expressions, for example with arithmetic operations:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# the variable y is assigned the value of the expression '3 times x plus x squared'"}]},{"type":"text","value":"\ny "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" x "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" x"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"function","style":"position:relative;"},"children":[{"type":"text","value":"Function"},{"type":"element","tagName":"a","properties":{"href":"#function","ariaLabel":"function permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"text","value":" executes some functionality. Functions can also take one or more "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"arguments"}]},{"type":"text","value":", which are data that can be fed to and processed by the function. Arguments are sometimes also referred to as "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"parameters"}]},{"type":"text","value":". There is a technical distinction between an argument and a parameter, but the words are often used interchangeably. For now it should suffice to remember that both terms refer to the idea of some data passed to the function."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A function is executed when it is "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"called"}]},{"type":"text","value":". That is, when the function (and its arguments, if any) is mentioned in the code. The following statement calls the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" function with the argument "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"this is an argument\""}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"this is an argument\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another function you've already used often is the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" function, which asks the user for input. The argument of this function is the message that is shown to the user:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your name: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this case the function also "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"returns"}]},{"type":"text","value":" a value. After the function has been executed, the section of code where it was called is replaced by the value it returns; it is another expression that has now been evaluated. The function "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" returns a string value containing whatever the user typed in at the prompt. The value a function returns is often stored in a variable so that it can be used in the program later on."}]},{"type":"element","tagName":"h2","properties":{"id":"data-type","style":"position:relative;"},"children":[{"type":"text","value":"Data type"},{"type":"element","tagName":"a","properties":{"href":"#data-type","ariaLabel":"data type permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Data type"}]},{"type":"text","value":" refers to the characteristics of any value present in the program. In the following bit of code the data type of the variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name"}]},{"type":"text","value":" is string or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":", and the data type of the variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"result"}]},{"type":"text","value":" is integer or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"int"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Anna\""}]},{"type":"text","value":"\nresult "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"100"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can use the function "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"type"}]},{"type":"text","value":" to find out the data type of any expression. An example of its use:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Anna\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"100"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"<class 'str'>\n<class 'int'>"}]}]},{"type":"element","tagName":"h2","properties":{"id":"syntax","style":"position:relative;"},"children":[{"type":"text","value":"Syntax"},{"type":"element","tagName":"a","properties":{"href":"#syntax","ariaLabel":"syntax permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similarly to natural languages, the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"syntax"}]},{"type":"text","value":" of a programming language determines how the code of a program should be written. Each programming language has its own specific syntax."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax of Python specifies, among other things, that the first line of an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" statement should end in a colon character, and the block of the statement should be indented:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Anna\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the syntactic rules of the programming language are not followed, there will be an error:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Anna\""}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"  File \"test.py\", line 1\n    if name == \"Anna\"\n                    ^\nSyntaxError: invalid syntax\n"}]}]},{"type":"element","tagName":"h2","properties":{"id":"debugging","style":"position:relative;"},"children":[{"type":"text","value":"Debugging"},{"type":"element","tagName":"a","properties":{"href":"#debugging","ariaLabel":"debugging permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the syntax of the program is correct but the program still doesn't function as intended, there is a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"bug"}]},{"type":"text","value":" in the program."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bugs manifest in different ways. Some bugs cause an error during execution. For example, the following program"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"x "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"10"}]},{"type":"text","value":"\ny "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"\nresult "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" x "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"/"}]},{"type":"text","value":" y\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\""}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"x"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" divided by "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"y"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" is "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"result"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"causes this error:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"ZeroDivisionError: integer division or modulo by zero on line 3\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The problem here is mathematical in nature: division by zero is not allowed, and this halts the execution of the program."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Errors during execution are usually rather easy to fix, because the error message states the line of code causing the error. Of course the actual reason for the bug might be somewhere quite different than the line of code causing the error."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes a bug in the program is revealed because the result the code produces is wrong. Discovering and locating this type of bug can be challenging. In the programming exercises on this course the tests are usually intended to reveal bugs of this type. Before a bug can be fixed, its cause must first be located."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Programming jargon refers to discovering the causes of bugs as "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"debugging"}]},{"type":"text","value":". It is an extremely important skill in any programmer's toolbox. Professional programmers often spend more time debugging than writing fresh code."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A simple yet effective way of debugging a program is adding debugging print statements to your code. Verifying the results of your code with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" commands gives a quick confirmation the code does what you want it to do."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following is an attempt to solve one of the exercises from the "},{"type":"element","tagName":"a","properties":{"href":"/part-1/5-conditional-statements"},"children":[{"type":"text","value":"previous section"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"hourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"float"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hourly wage: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\nhours "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"int"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hours worked: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\nday "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Day of the week: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\ndaily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" hourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" hours\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Daily wages: "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" euros\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The program doesn't work quite right. Executing the tests prints out the following:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"FAIL: PythonEditorTest: test_sunday_1\n\nWith input 20.0,6,Sunday correct wage 240.0 is not found in output Daily wages: 120.0 euros\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When debugging the exercises on this course, the first step is often checking how the program behaves with the input specified in the test that failed. Indeed the result isn't what was expected:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Daily wages: 120.0 euros"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Debugging usually means running the program multiple times. It can come in handy to temporarily \"hard-code\" the problematic input, instead of asking the user for input each time. In this case hard-coding could look like this:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# hourly_wage = float(input(\"Hourly wage: \"))"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# hours = int(input(\"Hours worked: \"))"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# day = input(\"Day of the week: \")"}]},{"type":"text","value":"\nhourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20.0"}]},{"type":"text","value":"\nhours "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"6"}]},{"type":"text","value":"\nday "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Sunday\""}]},{"type":"text","value":"\n\ndaily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" hourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" hours\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Daily wages: "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" euros\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The next step could be adding "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"debugging print statements"}]},{"type":"text","value":". The problematic part of the code is in the section dealing with Sundays, so let's add "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" commands before and after the line that should double the daily wages on Sundays:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# ..."}]},{"type":"text","value":"\n\ndaily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" hourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" hours\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"wages before:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"wages after doubling:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Daily wages: "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" euros\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Running the code now reveals nothing - the debugging print statements aren't printed at all. It seems that the contents of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" block are never executed, so there must be a problem with the conditional statement. Let's try printing out the value of the Boolean expression:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# ..."}]},{"type":"text","value":"\n\ndaily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" hourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" hours\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"condition:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"wages before:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"wages after doubling:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Daily wages: "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" euros\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Indeed, the value is "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":", so the contents of the if block are never executed:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"condition:  False\nDaily wages: 120.0 euros"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The issue must then lie within the condition of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" statement. As in so many situations in programming, the case of letters matters also in comparisons. Notice how the \"sunday\" in the Boolean expression has not been capitalized, but in the input it was. Let's fix this (in both the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" command and the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" statement):"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# ..."}]},{"type":"text","value":"\n\ndaily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" hourly_wage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" hours\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"condition:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" day "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Sunday\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"wages before:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"wages after doubling:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Daily wages: "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"daily_wages"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" euros\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Running this prints out the following:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"condition: True\nwages before: 120\nwages after doubling: 120\nDaily wages: 120.0 euros"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It seems the value stored in "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"daily_wages"}]},{"type":"text","value":" is correct at first: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"hourly_wage = 20.0"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"hours = 6"}]},{"type":"text","value":", and 20.0 * 6 = 120.0. The command which is supposed to double the figure doesn't do so, however, so there must be a problem with the command. And indeed the command"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"does double the value, but it doesn't store the new value anywhere. Let's change it so it also stores the new value:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"daily_wages "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Running the program again reveals that the printout at the end is now also correct:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"condition: True\nwages before: 120\nwages after doubling: 240\nDaily wages: 240.0 euros"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When the program has been fixed, remember to remove all debugging print statements and other code added for debugging purposes."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This example was quite simple, and in such a short program one could probably figure out the bugs just by reading the code carefully. However, using debugging print statements is often a quick way to get a feeling for where the problem might lie. Print statements can be used to figure out which parts of the program seem to work correctly, so bug tracking efforts can be concentrated on the sections of code which are the most likely culprits."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Debugging print statements are only one tool for debugging programs. We will come back to this subject later on during this course. You should now get into the habit of using debugging print statements to look for mistakes in your code. Programming professionals cannot get by without using them, so it is a very useful tool for beginners as well."}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Fix the syntax","tmcname":"part02-01_fix_syntax","height":"400px"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following program contains several "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"syntactic errors"}]},{"type":"text","value":". Please fix the program so that the syntax is in order and the program works as specified by the examples below."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"  number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in a number: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" number"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"100"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"The number was greater than one hundred\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"100"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\"Now its value has decreased by one hundred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n     "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Its value is now\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" number"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" must be my lucky number!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\"Have a nice day!"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"13"}]},{"type":"text","value":"\n13 must be my lucky number!\nHave a nice day!"}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"101"}]},{"type":"text","value":"\nThe number was greater than one hundred\nNow its value has decreased by one hundred\nIts value is now 1\n1 must be my lucky number!\nHave a nice day!"}]}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Number of characters","tmcname":"part02-02_number_of_characters"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The function "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"len"}]},{"type":"text","value":" can be used to find out the length of a string, among other things. The function returns the number of characters in a string."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some examples of how this works:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"word "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"abcd\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"len"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"word"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"len"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"hi there\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\nword2 "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"howdydoody\""}]},{"type":"text","value":"\nlength "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"len"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"word2"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"length"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\nempty_string "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\""}]},{"type":"text","value":"\nlength "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"len"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"empty_string"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"length"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"4\n8\n10\n0"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which asks the user for a word and then prints out the number of characters, if there was more than one typed in."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Examples of expected behaviour:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"hey"}]},{"type":"text","value":"\nThere are 3 letters in the word hey\nThank you!"}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"banana"}]},{"type":"text","value":"\nThere are 6 letters in the word banana\nThank you!"}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"b"}]},{"type":"text","value":"\nThank you!"}]}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Typecasting","tmcname":"part02-03_typecasting"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When programming in Python, often we need to change the data type of a value. For example, a floating point number can be converted into an integer with the function "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"int"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"\ntemperature "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"float"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in a temperature: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"The temperature is\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" temperature"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"...and rounded down it is\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"int"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"temperature"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a temperature: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5.15"}]},{"type":"text","value":"\nThe temperature is 5.15\n...and rounded down it is 5"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice the function always rounds down, and not according to the rounding rules in mathematics. This is an example of a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"floor function"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a temperature: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"8.99"}]},{"type":"text","value":"\nThe temperature is 8.99\n...and rounded down it is 8"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which asks the user for a floating point number and then prints out the integer part and the decimal part separately. Use the Python "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"int"}]},{"type":"text","value":" function."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can assume the number given by the user is always greater than zero."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example of expected behaviour:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1.34"}]},{"type":"text","value":"\nInteger part: 1\nDecimal part: 0.34"}]}]}]},{"type":"comment","value":"\n\nA quiz to review the contents of this section:\n\n<quiz id=\"eb4b41d3-b83b-5815-a1d5-ae9b377aa274\"></quiz>\n\n\n"}]},"html":"<div><text-box variant='learningObjectives' name=\"Learning objectives\"><p>After this section</p><ul>\n<li>You will be familiar with some essential terminology in programming</li>\n<li>You will know the difference between a statement and an expression</li>\n<li>You will be able to find out the data type of an evaluated expression</li>\n<li>You will have learnt to use debugging methods to find mistakes in your code</li>\n</ul></text-box><p>In the first part of this course we didn't pay much attention to terminology, so let's have a look at some central concepts in programming.</p><h2 id=\"statement\" style=\"position:relative;\">Statement<a href=\"#statement\" aria-label=\"statement permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>A <em>statement</em> is a part of the program which executes something. It often, but not always, refers to a single command.</p><p>For example, <code class=\"language-text\">print(\"Hi!\")</code> is a statement which prints out a line of text. Likewise, <code class=\"language-text\">number = 2</code> is a statement which assigns a value to a variable.</p><p>A statement can also be more complicated. It can, for instance, contain other statements. The following statement spans three lines:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">\"Anna\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span>\n    number <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div><p>In the above case there are two statements (a print statement and an assignment statement) within a conditional statement.</p><h2 id=\"block\" style=\"position:relative;\">Block<a href=\"#block\" aria-label=\"block permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>A <em>block</em> is a group of consecutive statements that are at the same level in the structure of the program. For example, the block of a conditional statement contains those statements which are executed only if the condition is true.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># beginning of the conditional block</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are of age!\"</span><span class=\"token punctuation\">)</span>\n    age <span class=\"token operator\">=</span> age <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are now one year older...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># end of the conditional block</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This here belongs to another block\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>In Python blocks are expressed by indenting all code in the block by the same amount of whitespace.</p><p>NB: the main block of a Python program must always be at the leftmost edge of the file, without indentation:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># this program will not work because it is not written at the leftmost egde of the file</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this program is not very good...\"</span><span class=\"token punctuation\">)</span></code></pre></div><h2 id=\"expression\" style=\"position:relative;\">Expression<a href=\"#expression\" aria-label=\"expression permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>An <em>expression</em> is a bit of code that results in a determined data type. When the program is executed, the expression is evaluated so that it has a value that can then be used in the program.</p><p>Here are a few examples of expressions:</p><table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Value</th>\n<th>Type</th>\n<th>Python data type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">2 + 4 + 3</code></td>\n<td><code class=\"language-text\">9</code></td>\n<td>integer</td>\n<td><code class=\"language-text\">int</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\"abc\" + \"de\"</code></td>\n<td><code class=\"language-text\">\"abcde\"</code></td>\n<td>string</td>\n<td><code class=\"language-text\">str</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">11 / 2</code></td>\n<td><code class=\"language-text\">5.5</code></td>\n<td>floating point number</td>\n<td><code class=\"language-text\">float</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">2 * 5 > 9</code></td>\n<td><code class=\"language-text\">True</code></td>\n<td>Boolean value</td>\n<td><code class=\"language-text\">bool</code></td>\n</tr>\n</tbody>\n</table><p>Because all expressions have a type, they can be assigned to variables:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># the variable x is assigned the value of the expression 1 + 2</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span></code></pre></div><p>Simple expressions can be assembled together to form more complicated expressions, for example with arithmetic operations:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># the variable y is assigned the value of the expression '3 times x plus x squared'</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span></code></pre></div><h2 id=\"function\" style=\"position:relative;\">Function<a href=\"#function\" aria-label=\"function permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>A <em>function</em> executes some functionality. Functions can also take one or more <em>arguments</em>, which are data that can be fed to and processed by the function. Arguments are sometimes also referred to as <em>parameters</em>. There is a technical distinction between an argument and a parameter, but the words are often used interchangeably. For now it should suffice to remember that both terms refer to the idea of some data passed to the function.</p><p>A function is executed when it is <em>called</em>. That is, when the function (and its arguments, if any) is mentioned in the code. The following statement calls the <code class=\"language-text\">print</code> function with the argument <code class=\"language-text\">\"this is an argument\"</code>:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is an argument\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>Another function you've already used often is the <code class=\"language-text\">input</code> function, which asks the user for input. The argument of this function is the message that is shown to the user:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your name: \"</span><span class=\"token punctuation\">)</span></code></pre></div><p>In this case the function also <em>returns</em> a value. After the function has been executed, the section of code where it was called is replaced by the value it returns; it is another expression that has now been evaluated. The function <code class=\"language-text\">input</code> returns a string value containing whatever the user typed in at the prompt. The value a function returns is often stored in a variable so that it can be used in the program later on.</p><h2 id=\"data-type\" style=\"position:relative;\">Data type<a href=\"#data-type\" aria-label=\"data type permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p><em>Data type</em> refers to the characteristics of any value present in the program. In the following bit of code the data type of the variable <code class=\"language-text\">name</code> is string or <code class=\"language-text\">str</code>, and the data type of the variable <code class=\"language-text\">result</code> is integer or <code class=\"language-text\">int</code>:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">\"Anna\"</span>\nresult <span class=\"token operator\">=</span> <span class=\"token number\">100</span></code></pre></div><p>You can use the function <code class=\"language-text\">type</code> to find out the data type of any expression. An example of its use:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Anna\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>&#x3C;class 'str'>\n&#x3C;class 'int'></p></sample-output><h2 id=\"syntax\" style=\"position:relative;\">Syntax<a href=\"#syntax\" aria-label=\"syntax permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Similarly to natural languages, the <em>syntax</em> of a programming language determines how the code of a program should be written. Each programming language has its own specific syntax.</p><p>The syntax of Python specifies, among other things, that the first line of an <code class=\"language-text\">if</code> statement should end in a colon character, and the block of the statement should be indented:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">\"Anna\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>If the syntactic rules of the programming language are not followed, there will be an error:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">\"Anna\"</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><pre>\n  File \"test.py\", line 1\n    if name == \"Anna\"\n                    ^\nSyntaxError: invalid syntax\n</pre></sample-output><h2 id=\"debugging\" style=\"position:relative;\">Debugging<a href=\"#debugging\" aria-label=\"debugging permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>If the syntax of the program is correct but the program still doesn't function as intended, there is a <em>bug</em> in the program.</p><p>Bugs manifest in different ways. Some bugs cause an error during execution. For example, the following program</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nresult <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> y\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">}</span></span><span class=\"token string\"> divided by </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>y<span class=\"token punctuation\">}</span></span><span class=\"token string\"> is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>causes this error:</p><sample-output><pre>\nZeroDivisionError: integer division or modulo by zero on line 3\n</pre></sample-output><p>The problem here is mathematical in nature: division by zero is not allowed, and this halts the execution of the program.</p><p>Errors during execution are usually rather easy to fix, because the error message states the line of code causing the error. Of course the actual reason for the bug might be somewhere quite different than the line of code causing the error.</p><p>Sometimes a bug in the program is revealed because the result the code produces is wrong. Discovering and locating this type of bug can be challenging. In the programming exercises on this course the tests are usually intended to reveal bugs of this type. Before a bug can be fixed, its cause must first be located.</p><p>Programming jargon refers to discovering the causes of bugs as <em>debugging</em>. It is an extremely important skill in any programmer's toolbox. Professional programmers often spend more time debugging than writing fresh code.</p><p>A simple yet effective way of debugging a program is adding debugging print statements to your code. Verifying the results of your code with <code class=\"language-text\">print</code> commands gives a quick confirmation the code does what you want it to do.</p><p>The following is an attempt to solve one of the exercises from the <a href=\"/part-1/5-conditional-statements\">previous section</a>:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">hourly_wage <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hourly wage: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nhours <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hours worked: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nday <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Day of the week: \"</span><span class=\"token punctuation\">)</span>\n\ndaily_wages <span class=\"token operator\">=</span> hourly_wage <span class=\"token operator\">*</span> hours\n<span class=\"token keyword\">if</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"sunday\"</span><span class=\"token punctuation\">:</span>\n    daily_wages <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Daily wages: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>daily_wages<span class=\"token punctuation\">}</span></span><span class=\"token string\"> euros\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>The program doesn't work quite right. Executing the tests prints out the following:</p><sample-output><pre>\nFAIL: PythonEditorTest: test_sunday_1\n\nWith input 20.0,6,Sunday correct wage 240.0 is not found in output Daily wages: 120.0 euros\n</pre></sample-output><p>When debugging the exercises on this course, the first step is often checking how the program behaves with the input specified in the test that failed. Indeed the result isn't what was expected:</p><sample-output><p>Daily wages: 120.0 euros</p></sample-output><p>Debugging usually means running the program multiple times. It can come in handy to temporarily \"hard-code\" the problematic input, instead of asking the user for input each time. In this case hard-coding could look like this:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># hourly_wage = float(input(\"Hourly wage: \"))</span>\n<span class=\"token comment\"># hours = int(input(\"Hours worked: \"))</span>\n<span class=\"token comment\"># day = input(\"Day of the week: \")</span>\nhourly_wage <span class=\"token operator\">=</span> <span class=\"token number\">20.0</span>\nhours <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\nday <span class=\"token operator\">=</span> <span class=\"token string\">\"Sunday\"</span>\n\ndaily_wages <span class=\"token operator\">=</span> hourly_wage <span class=\"token operator\">*</span> hours\n<span class=\"token keyword\">if</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"sunday\"</span><span class=\"token punctuation\">:</span>\n    daily_wages <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Daily wages: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>daily_wages<span class=\"token punctuation\">}</span></span><span class=\"token string\"> euros\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>The next step could be adding <em>debugging print statements</em>. The problematic part of the code is in the section dealing with Sundays, so let's add <code class=\"language-text\">print</code> commands before and after the line that should double the daily wages on Sundays:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ...</span>\n\ndaily_wages <span class=\"token operator\">=</span> hourly_wage <span class=\"token operator\">*</span> hours\n<span class=\"token keyword\">if</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"sunday\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wages before:\"</span><span class=\"token punctuation\">,</span> daily_wages<span class=\"token punctuation\">)</span>\n    daily_wages <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wages after doubling:\"</span><span class=\"token punctuation\">,</span> daily_wages<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Daily wages: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>daily_wages<span class=\"token punctuation\">}</span></span><span class=\"token string\"> euros\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>Running the code now reveals nothing - the debugging print statements aren't printed at all. It seems that the contents of the <code class=\"language-text\">if</code> block are never executed, so there must be a problem with the conditional statement. Let's try printing out the value of the Boolean expression:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ...</span>\n\ndaily_wages <span class=\"token operator\">=</span> hourly_wage <span class=\"token operator\">*</span> hours\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition:\"</span><span class=\"token punctuation\">,</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"sunday\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"sunday\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wages before:\"</span><span class=\"token punctuation\">,</span> daily_wages<span class=\"token punctuation\">)</span>\n    daily_wages <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wages after doubling:\"</span><span class=\"token punctuation\">,</span> daily_wages<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Daily wages: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>daily_wages<span class=\"token punctuation\">}</span></span><span class=\"token string\"> euros\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>Indeed, the value is <code class=\"language-text\">False</code>, so the contents of the if block are never executed:</p><sample-output><p>condition:  False\nDaily wages: 120.0 euros</p></sample-output><p>The issue must then lie within the condition of the <code class=\"language-text\">if</code> statement. As in so many situations in programming, the case of letters matters also in comparisons. Notice how the \"sunday\" in the Boolean expression has not been capitalized, but in the input it was. Let's fix this (in both the <code class=\"language-text\">print</code> command and the <code class=\"language-text\">if</code> statement):</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># ...</span>\n\ndaily_wages <span class=\"token operator\">=</span> hourly_wage <span class=\"token operator\">*</span> hours\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition:\"</span><span class=\"token punctuation\">,</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"Sunday\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> day <span class=\"token operator\">==</span> <span class=\"token string\">\"Sunday\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wages before:\"</span><span class=\"token punctuation\">,</span> daily_wages<span class=\"token punctuation\">)</span>\n    daily_wages <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wages after doubling:\"</span><span class=\"token punctuation\">,</span> daily_wages<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Daily wages: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>daily_wages<span class=\"token punctuation\">}</span></span><span class=\"token string\"> euros\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>Running this prints out the following:</p><sample-output><p>condition: True\nwages before: 120\nwages after doubling: 120\nDaily wages: 120.0 euros</p></sample-output><p>It seems the value stored in <code class=\"language-text\">daily_wages</code> is correct at first: <code class=\"language-text\">hourly_wage = 20.0</code> and <code class=\"language-text\">hours = 6</code>, and 20.0 * 6 = 120.0. The command which is supposed to double the figure doesn't do so, however, so there must be a problem with the command. And indeed the command</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">daily_wages <span class=\"token operator\">*</span> <span class=\"token number\">2</span></code></pre></div><p>does double the value, but it doesn't store the new value anywhere. Let's change it so it also stores the new value:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">daily_wages <span class=\"token operator\">*=</span> <span class=\"token number\">2</span></code></pre></div><p>Running the program again reveals that the printout at the end is now also correct:</p><sample-output><p>condition: True\nwages before: 120\nwages after doubling: 240\nDaily wages: 240.0 euros</p></sample-output><p>When the program has been fixed, remember to remove all debugging print statements and other code added for debugging purposes.</p><p>This example was quite simple, and in such a short program one could probably figure out the bugs just by reading the code carefully. However, using debugging print statements is often a quick way to get a feeling for where the problem might lie. Print statements can be used to figure out which parts of the program seem to work correctly, so bug tracking efforts can be concentrated on the sections of code which are the most likely culprits.</p><p>Debugging print statements are only one tool for debugging programs. We will come back to this subject later on during this course. You should now get into the habit of using debugging print statements to look for mistakes in your code. Programming professionals cannot get by without using them, so it is a very useful tool for beginners as well.</p><in-browser-programming-exercise name=\"Fix the syntax\" tmcname=\"part02-01_fix_syntax\" height=\"400px\"><p>The following program contains several <em>syntactic errors</em>. Please fix the program so that the syntax is in order and the program works as specified by the examples below.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  number <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in a number: \"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> number<span class=\"token operator\">></span><span class=\"token number\">100</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The number was greater than one hundred\"</span><span class=\"token punctuation\">)</span>\n    number <span class=\"token operator\">-</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Now its value has decreased by one hundred<span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Its value is now\"</span><span class=\"token operator\">+</span> number<span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">+</span> <span class=\"token string\">\" must be my lucky number!\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>\"Have a nice day!<span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Please type in a number: <strong>13</strong>\n13 must be my lucky number!\nHave a nice day!</p></sample-output><sample-output><p>Please type in a number: <strong>101</strong>\nThe number was greater than one hundred\nNow its value has decreased by one hundred\nIts value is now 1\n1 must be my lucky number!\nHave a nice day!</p></sample-output></in-browser-programming-exercise><in-browser-programming-exercise name=\"Number of characters\" tmcname=\"part02-02_number_of_characters\"><p>The function <code class=\"language-text\">len</code> can be used to find out the length of a string, among other things. The function returns the number of characters in a string.</p><p>Some examples of how this works:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">word <span class=\"token operator\">=</span> <span class=\"token string\">\"abcd\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi there\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nword2 <span class=\"token operator\">=</span> <span class=\"token string\">\"howdydoody\"</span>\nlength <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>word2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span>\n\nempty_string <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\nlength <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>empty_string<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>4\n8\n10\n0</p></sample-output><p>Please write a program which asks the user for a word and then prints out the number of characters, if there was more than one typed in.</p><p>Examples of expected behaviour:</p><sample-output><p>Please type in a word: <strong>hey</strong>\nThere are 3 letters in the word hey\nThank you!</p></sample-output><sample-output><p>Please type in a word: <strong>banana</strong>\nThere are 6 letters in the word banana\nThank you!</p></sample-output><sample-output><p>Please type in a word: <strong>b</strong>\nThank you!</p></sample-output></in-browser-programming-exercise><in-browser-programming-exercise name=\"Typecasting\" tmcname=\"part02-03_typecasting\"><p>When programming in Python, often we need to change the data type of a value. For example, a floating point number can be converted into an integer with the function <code class=\"language-text\">int</code>:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\ntemperature <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in a temperature: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The temperature is\"</span><span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...and rounded down it is\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div><sample-output><p>Please type in a temperature: <strong>5.15</strong>\nThe temperature is 5.15\n...and rounded down it is 5</p></sample-output><p>Notice the function always rounds down, and not according to the rounding rules in mathematics. This is an example of a <em>floor function</em>.</p><sample-output><p>Please type in a temperature: <strong>8.99</strong>\nThe temperature is 8.99\n...and rounded down it is 8</p></sample-output><p>Please write a program which asks the user for a floating point number and then prints out the integer part and the decimal part separately. Use the Python <code class=\"language-text\">int</code> function.</p><p>You can assume the number given by the user is always greater than zero.</p><p>An example of expected behaviour:</p><sample-output><p>Please type in a number: <strong>1.34</strong>\nInteger part: 1\nDecimal part: 0.34</p></sample-output></in-browser-programming-exercise><!--\n\nA quiz to review the contents of this section:\n\n<quiz id=\"eb4b41d3-b83b-5815-a1d5-ae9b377aa274\"></quiz>\n\n\n--></div>","frontmatter":{"path":"/part-2/1-programming-terminology","title":"Programming terminology"},"fileAbsolutePath":"/Users/rick/Desktop/ata-programming-course/data/part-2/1-programming_terminology.md"},"allPages":{"edges":[{"node":{"id":"d8db2813-effd-5f16-8e77-b2028d1963a5","frontmatter":{"path":"/exam","title":"Exam 4.6."}}},{"node":{"id":"9ba3b4ca-4659-55ab-86c0-de028a0e59de","frontmatter":{"path":"/error_messages","title":"Common error messages"}}},{"node":{"id":"2be3cb73-ed8f-5b62-b8ad-a8e806bdcc77","frontmatter":{"path":"/exam-intro","title":"Introduction to Programming exam 08.06."}}},{"node":{"id":"c695e1a8-fa3a-5b43-b51d-c06ccd31438d","frontmatter":{"path":"/exam-adv","title":"Advanced Course in Programming exam 15.06."}}},{"node":{"id":"ab07d15f-380a-541f-a7a1-d9422520166e","frontmatter":{"path":"/faq","title":"Frequently asked questions"}}},{"node":{"id":"b6cbbd27-e497-5f01-bdec-f06c8e29e825","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"04df42e2-341a-57c0-9745-97a40eff1a57","frontmatter":{"path":"/grading-and-exams","title":"Grading and exams"}}},{"node":{"id":"b7f12fd2-39f4-5fdf-960e-16955dc4b9ee","frontmatter":{"path":"/glossary","title":"Glossary"}}},{"node":{"id":"d98b2e19-dd19-5f43-be30-9c174e5e00c2","frontmatter":{"path":"/","title":"About this course"}}},{"node":{"id":"4b6151af-b410-5524-bb9f-7302bbe17976","frontmatter":{"path":"/support-and-assistance","title":"Support and assistance"}}},{"node":{"id":"b38b0d08-2a4b-5fce-8266-b485b9955823","frontmatter":{"path":"/part-9/2-objects-as-attributes","title":"Objects as attributes"}}},{"node":{"id":"b6d9feeb-dd85-589e-b698-5e1b92ab0499","frontmatter":{"path":"/part-9/1-objects-and-references","title":"Objects and references"}}},{"node":{"id":"3e60222b-e108-579c-8e08-90bb4e6d7ada","frontmatter":{"path":"/part-9/3-encapsulation","title":"Encapsulation"}}},{"node":{"id":"e1d314e4-1299-561f-89be-d2161754d66a","frontmatter":{"path":"/part-9/4-scope-of-methods","title":"Scope of methods"}}},{"node":{"id":"784763bb-0aa1-53a0-b323-1d00f5c4142f","frontmatter":{"path":"/part-9","title":"Part 9"}}},{"node":{"id":"0d9f9958-4383-59ae-9a11-364ff734a23e","frontmatter":{"path":"/part-9/5-class-attributes","title":"Class attributes"}}},{"node":{"id":"18682a18-fbbd-52ae-84f0-9b1cf0b44b4e","frontmatter":{"path":"/part-9/6-more-examples-with-classes","title":"More examples with classes"}}},{"node":{"id":"88c47721-f022-5034-9b6a-eac7e1256b1a","frontmatter":{"path":"/part-8/1-objects-and-methods","title":"Objects and methods"}}},{"node":{"id":"c220147a-b2ab-555f-9018-3aa2adf850e7","frontmatter":{"path":"/part-8","title":"Part 8"}}},{"node":{"id":"e1649396-81d1-5cfb-86c2-a3dd026bfd6a","frontmatter":{"path":"/part-8/2-classes-and-objects","title":"Classes and objects"}}},{"node":{"id":"4db5b97c-1241-5cce-a2c8-62f4f094ed7c","frontmatter":{"path":"/part-8/3-defining-classes","title":"Defining classes"}}},{"node":{"id":"7b2b09e2-3ff4-58d3-a8fc-c11ba7aaed5f","frontmatter":{"path":"/part-8/4-defining-methods","title":"Defining methods"}}},{"node":{"id":"ed42cce5-b878-556f-ac6e-26b51ee59be9","frontmatter":{"path":"/part-7/2-randomness","title":"Randomness"}}},{"node":{"id":"251589b0-b60a-5422-b8c0-603c3ca4bafd","frontmatter":{"path":"/part-7/4-data-processing","title":"Data processing"}}},{"node":{"id":"e7448d15-b984-5196-bdbd-3f65e0b48689","frontmatter":{"path":"/part-7/3-times-and-dates","title":"Times and dates"}}},{"node":{"id":"9daf0bda-4742-5ea0-a63d-7179dce82d48","frontmatter":{"path":"/part-7/1-modules","title":"Modules"}}},{"node":{"id":"7030cb86-0350-55ed-9b54-f3b64e5c008b","frontmatter":{"path":"/part-7/6-more-features","title":"More Python features"}}},{"node":{"id":"d92d07b6-fcde-5318-9222-198fc8cfe169","frontmatter":{"path":"/part-7/5-creating-modules","title":"Creating your own modules"}}},{"node":{"id":"9db37bf1-d443-5a7d-a43b-8d36eaffeb94","frontmatter":{"path":"/part-7","title":"Part 7"}}},{"node":{"id":"6b8ae5cb-7796-5e29-95bd-3572e22fa3b7","frontmatter":{"path":"/part-6/3-errors","title":"Handling errors"}}},{"node":{"id":"d90518d6-d44f-5fa1-aba2-1d03504f83b8","frontmatter":{"path":"/part-6/2-writing-files","title":"Writing files"}}},{"node":{"id":"e8ae0e7b-3a1e-51be-b459-1514d7d3d97a","frontmatter":{"path":"/part-6/4-scope-of-variables","title":"Local and global variables"}}},{"node":{"id":"193e6d1c-cbf4-5d4b-967b-a914f927a1a8","frontmatter":{"path":"/part-6/1-reading-files","title":"Reading files"}}},{"node":{"id":"2e134e85-7d8a-51c9-82c5-2a7823f5f103","frontmatter":{"path":"/part-6","title":"Part 6"}}},{"node":{"id":"f7fdc16c-15bd-51a7-bb20-6bb9c3873a2e","frontmatter":{"path":"/all-exercises","title":"All exercises"}}},{"node":{"id":"44622624-53db-5e40-9522-42f7142ca5cb","frontmatter":{"path":"/part-5/3-dictionary","title":"Dictionary"}}},{"node":{"id":"3cdfe884-286a-5230-a741-0612fd1d63a0","frontmatter":{"path":"/part-5/4-tuple","title":"Tuple"}}},{"node":{"id":"b91612df-3107-5d4b-a6db-51b53a8616f0","frontmatter":{"path":"/part-5/2-references","title":"References"}}},{"node":{"id":"da0a1ce7-c54e-5432-9905-8b2cd6c52fa1","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"44d7cea2-7169-5397-aabd-97405f4e55dd","frontmatter":{"path":"/part-5/1-more-lists","title":"More lists"}}},{"node":{"id":"68e5852d-7067-53fa-b5f7-fdefeee9d750","frontmatter":{"path":"/part-4/1-vscode","title":"The Visual Studio Code editor, Python interpreter and built-in debugging tool"}}},{"node":{"id":"22e94505-9fb4-5dc4-bdfa-dfb471622e89","frontmatter":{"path":"/part-4/4-definite-iteration","title":"Definite iteration"}}},{"node":{"id":"9e3332f8-89da-5fa5-8668-1e1e8c94a2c4","frontmatter":{"path":"/part-4/2-more-functions","title":"More functions"}}},{"node":{"id":"fe4c4828-adde-533b-9cfe-f18425188416","frontmatter":{"path":"/part-4/3-lists","title":"Lists"}}},{"node":{"id":"3d7517c8-bc07-5ddd-9fa7-e670f27b75e9","frontmatter":{"path":"/part-4/6-strings-and-lists","title":"More strings and lists"}}},{"node":{"id":"4d8ba7e8-ddc9-559e-b6f5-4c2b3466548f","frontmatter":{"path":"/part-8/5-more-examples-of-classes","title":"More examples of classes"}}},{"node":{"id":"8d40158e-65d9-5c9c-b7aa-8ec3e16e20df","frontmatter":{"path":"/part-4/5-print-statement-formatting","title":"Print statement formatting"}}},{"node":{"id":"b047c994-b085-59f6-a1d3-c0229eea80b6","frontmatter":{"path":"/part-3/3-more-loops","title":"More loops"}}},{"node":{"id":"9bd37306-0736-5dae-b953-d6200040566f","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"2e0a16f4-4cf0-501b-b92a-d6fb003eacd5","frontmatter":{"path":"/part-3/2-working-with-strings","title":"Working with strings"}}},{"node":{"id":"0845005c-6a42-59a3-811f-2b14694db890","frontmatter":{"path":"/part-3/4-defining-functions","title":"Defining functions"}}},{"node":{"id":"ebb7f3c7-f462-5d28-a364-fea57ed880ca","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"a5aa6afc-a253-52fc-bfb9-dfa2b65cf5e5","frontmatter":{"path":"/part-2/2-else-elif","title":"More conditionals"}}},{"node":{"id":"f9a56cb3-98ae-556c-85d3-c3690ced12d8","frontmatter":{"path":"/part-3/1-loops-with-conditions","title":"Loops with conditions"}}},{"node":{"id":"8a74547b-d9b2-5634-8d00-25c59535e6cb","frontmatter":{"path":"/part-2/1-programming-terminology","title":"Programming terminology"}}},{"node":{"id":"177e147a-5c50-5df5-b16c-70df754bc5e7","frontmatter":{"path":"/part-2/3-combining-conditions","title":"Combining conditions"}}},{"node":{"id":"2309c50c-6034-53b1-8c30-8c2d457d5e20","frontmatter":{"path":"/part-2/4-simple-loops","title":"Simple loops"}}},{"node":{"id":"0c676eb3-5211-5b70-8ac3-90ce0e2d4829","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"b7fd571e-27df-5926-abc2-3a26d6e5c7ef","frontmatter":{"path":"/part-14/2-robot-and-boxes","title":"Robot and boxes"}}},{"node":{"id":"238c01d6-1263-5d94-8fce-a02e6b4ad4d6","frontmatter":{"path":"/part-14/1-game-project","title":"Game project"}}},{"node":{"id":"d642cd7c-89e2-58e8-a339-3b6f550b99b7","frontmatter":{"path":"/part-14/3-finishing-the-game","title":"Finishing the game"}}},{"node":{"id":"b29ce643-ea60-5c01-b7b5-00dc47cc6a8e","frontmatter":{"path":"/part-14/4-your-own-game","title":"Your own game"}}},{"node":{"id":"8f5773c2-2c3f-5841-badb-0dae3a41e6da","frontmatter":{"path":"/part-14","title":"Part 14"}}},{"node":{"id":"c4e61f69-451b-5441-9356-98fd456c3746","frontmatter":{"path":"/part-13/2-animation","title":"Animation"}}},{"node":{"id":"c4060549-82c9-59ab-b172-d831c17bae4a","frontmatter":{"path":"/part-13/4-more-pygame-techniques","title":"More pygame techniques"}}},{"node":{"id":"1c994ffb-c42d-52d6-ae52-a3fe9fe17377","frontmatter":{"path":"/part-13/1-pygame","title":"Pygame"}}},{"node":{"id":"cc13ecb4-4995-5231-96d4-41a9f3fad50c","frontmatter":{"path":"/part-13/3-events","title":"Events"}}},{"node":{"id":"5fe99617-c000-5c33-86ae-aee58c52b3da","frontmatter":{"path":"/part-13","title":"Part 13"}}},{"node":{"id":"a47d2811-bc60-5f20-9148-8398b037dd3b","frontmatter":{"path":"/part-12/2-generators","title":"Generators"}}},{"node":{"id":"cfbdf200-43f7-57ce-902a-8d6c6511c98a","frontmatter":{"path":"/part-12/1-functions-as-arguments","title":"Functions as arguments"}}},{"node":{"id":"b8949ce9-10be-58c6-8ffb-bc0f4eb7a489","frontmatter":{"path":"/part-12/3-functional-programming","title":"Functional programming"}}},{"node":{"id":"be0b6a29-9799-51f8-97dd-755841ddc4e4","frontmatter":{"path":"/part-12/4-regular-expressions","title":"Regular expressions"}}},{"node":{"id":"c9541869-de5b-5ebf-8a16-a2c15f4d0ebb","frontmatter":{"path":"/part-11/1-list-comprehensions","title":"List comprehensions"}}},{"node":{"id":"f34d31cf-608e-5fbf-a6c4-ccabdb4f121e","frontmatter":{"path":"/part-11/2-more-comprehensions","title":"More comprehensions"}}},{"node":{"id":"a90d29c2-8272-50ca-8e00-0a9312fc47de","frontmatter":{"path":"/part-12","title":"Part 12"}}},{"node":{"id":"7f833a91-2f2e-58ac-8415-6926aa613925","frontmatter":{"path":"/part-11/4-more-recursion-examples","title":"More recursion examples"}}},{"node":{"id":"538b8c9a-6bde-55f7-9867-e3636c95e87b","frontmatter":{"path":"/part-11/3-recursion","title":"Recursion"}}},{"node":{"id":"1b10f54c-cff0-5493-827a-bcee3efce318","frontmatter":{"path":"/part-11","title":"Part 11"}}},{"node":{"id":"e5c1355e-fc3c-591d-8884-d341b40a4428","frontmatter":{"path":"/part-10/1-class-hierarchies","title":"Class hierarchies"}}},{"node":{"id":"de972a28-3605-5463-a612-32b2bf41e675","frontmatter":{"path":"/part-10/4-application-development","title":"Developing a larger application"}}},{"node":{"id":"1e01273e-26d3-5cc2-8563-36671861be36","frontmatter":{"path":"/part-1/1-getting-started","title":"Getting started"}}},{"node":{"id":"4d30d067-3ed9-5d04-8ad7-4f2253476ddc","frontmatter":{"path":"/part-10/2-access-modifiers","title":"Access modifiers"}}},{"node":{"id":"8656aff7-5a5b-51e8-9b5b-40e4512ef1a6","frontmatter":{"path":"/part-1/2-information-from-the-user","title":"Information from the user"}}},{"node":{"id":"d7eef82c-6865-5251-9efe-b4b65b2f59b1","frontmatter":{"path":"/part-10","title":"Part 10"}}},{"node":{"id":"e5302bb6-ca41-5563-a4ef-e9717b7df4aa","frontmatter":{"path":"/part-1/3-more-about-variables","title":"More about variables"}}},{"node":{"id":"aac8c577-586f-5bf7-bdd2-9ed2c0567fb4","frontmatter":{"path":"/part-1/4-arithmetic-operations","title":"Arithmetic operations"}}},{"node":{"id":"db74d263-b01c-5556-90e9-a43d1c002b3c","frontmatter":{"path":"/part-10/3-oo-programming-techniques","title":"Object oriented programming techniques"}}},{"node":{"id":"60726f4d-456d-5ea5-8998-f40f3abedce0","frontmatter":{"path":"/part-1/5-conditional-statements","title":"Conditional statements"}}},{"node":{"id":"c08196fc-f455-51e6-80af-c0c9c2055bba","frontmatter":{"path":"/part-1","title":"Part 1"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["1357757885","994120085"]}